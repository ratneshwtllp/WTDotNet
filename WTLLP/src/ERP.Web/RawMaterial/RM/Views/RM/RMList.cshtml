@using Microsoft.AspNetCore.Http;
@model ERP.Web.Areas.RM.Models.RawMaterialModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Raw Material List";
}

<link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap-select.css" />
<script src="~/lib/bootstrap/dist/js/bootstrap-select.js"></script>

<div id="loading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 30%; left: 45%; color: White;">
        Loading, please wait...<img src="../../images/ajax-loading.gif" />
    </p>
</div>

@section Scripts {
    <script type="text/javascript">
        var chkcreatedatefrom = 0;
        $('input[name="ChkCreateDateFrom"]').on('click', function () {
            if ($(this).is(':checked')) {
                $('input[name="CreateDateFrom"]').prop('disabled', false)
                $('input[name="ChkCreateDateTo"]').prop('disabled', false)
                chkcreatedatefrom = 1;
            }
            else {
                $('input[name="CreateDateFrom"]').prop('disabled', true)
                $('input[name="CreateDateTo"]').prop('disabled', true)
                $('input[name="ChkCreateDateTo"]').prop('checked', false)
                $('input[name="ChkCreateDateTo"]').prop('disabled', true)
                chkcreatedatefrom = 0;
            }
        });

        var chkcreatedateto = 0;
        $('input[name="ChkCreateDateTo"]').on('click', function () {
            if ($(this).is(':checked')) {
                $('input[name="CreateDateTo"]').prop('disabled', false)
                chkcreatedateto = 1;
            }
            else {
                $('input[name="CreateDateTo"]').prop('disabled', true)
                chkcreatedateto = 0;
            }
        });

        var chkrmupdateon = 0;
        $('input[name="ChkRMUpdateOn"]').on('click', function () {
            if ($(this).is(':checked')) {
                $('input[name="RMUpdateOn"]').prop('disabled', false)
                chkrmupdateon = 1;
            }
            else {
                $('input[name="RMUpdateOn"]').prop('disabled', true)
                chkrmupdateon = 0;
            }
        });

        var chkrmreviewon = 0;
        $('input[name="ChkRMReviewOn"]').on('click', function () {
            if ($(this).is(':checked')) {
                $('input[name="RMReviewOn"]').prop('disabled', false)
                chkrmreviewon = 1;
            }
            else {
                $('input[name="RMReviewOn"]').prop('disabled', true)
                chkrmreviewon = 0;
            }
        });

        $(function () {
            $("#Cat_Id").change(function () {
                var value = $("#Cat_Id :selected").val(); //cat id
                //var value1 = $("#Cat_Id :selected").text(); //cat name
                //alert(value);
                if (value <= 0)
                    return;
                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetSubCategory")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#Subcat_Id").html(items.join(' '));
                        $("#Subcat_Id").selectpicker('refresh');
                   
                    },
                });
            });
        });

        $(function () {
            $("#cbochange_catid").change(function () {
                var value = $("#cbochange_catid :selected").val(); //cat id
                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetSubCategory")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#cbochange_subcatid").html(items.join(' '));
                    },
                });
            });
        });

        $(function () {
            $('#search').click(function () {
                $("#loading").show();
                $("#list").html('');
                var data = {
                    RMCategory_ID: parseInt($("#Cat_Id :selected").val()),
                    RMSubCategory_ID: parseInt($("#Subcat_Id :selected").val()),
                    RMCode: $("#Code").val(),
                    RMName: $("#Name").val(),

                    //Color_ID: parseInt($("#Color_ID :selected").val()),
                    Color: $("#Colour :selected").text(),
                    RMDescription: $("#Description").val(),

                    Finish: $("#Finish").val(),
                    Thickness: $("#Thickness").val(),
                    SizeName: $("#SizeName").val(),

                    ChkRMUpdateOnInt: chkrmupdateon,
                    RMUpdateOn: $('#RMUpdateOn').val(),
                    ChkRMReviewOnInt: chkrmreviewon,
                    RMReviewOn: $('#RMReviewOn').val(),

                    ChkCreateDateFromInt: chkcreatedatefrom,
                    CreateDateFrom: $('#CreateDateFrom').val(),

                    ChkCreateDateToInt: chkcreatedateto,
                    CreateDateTo: $('#CreateDateTo').val(),

                    //RMBrandId: parseInt($("#cbo_rmbrand :selected").val()),
                }
                var url = '@Url.Action("RMList_Partial", "RM")';
                $('#list').load(url, { rms: data, }, function () {
                    $("#loading").hide();
                });
            });
        });

        $('#move').click(function () {
            var norow = $('#list').html();
            //alert(norow);
            if (norow === undefined || norow == "") {
                alert("Please Click on Search");
                return;
            }
            var cateid = $("#cbochange_catid :selected").val(); //cat id
            var subcatid = $("#cbochange_subcatid :selected").val(); //cat id
            var list = [];
            var rmids = {};
            var t = 0;
            var status = 0;
            $('.table tbody tr').each(function (index, ele) {
                if ($(this).find('.chk').prop("checked") == true) {
                    //alert("Checkbox is checked.");
                    var data = {
                        RitemId: parseInt($(this).find('.ritemid').text()),
                        BelongTo: subcatid,
                        MasterBelongTo: cateid
                    }
                    list.push(data);
                    //rmids[t] = parseInt($(this).find('.ritemid').text());
                    //alert(rmids[t]);
                    //t = t + 1;
                    status = 1;
                }
            });
            if (status == 0) {
                alert("Please check at least one RM.");
                return;
            }

            $.ajax({
                cache: false,
                type: 'POST',
                url: '@Url.Action("MoveRM")',
                data: { RMList: list },
                dataType: 'JSON',
                success: function (data) {
                    alert(data);
                    $('#search').trigger('click');
                }
            });
        });
    </script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            liveSearch: true,
            showSubtext: true
        });
    });
</script>

<div class="clear"></div>
<div class="row clearleft-custom flow-offset-1" >
    <div class="col-xs-12 col-sm-6 col-lg-4">
        <div class="thumbnail thumbnail-mod-1 bordernone">
            <div class="form">
                <p class="contact">@Html.LabelFor(a => a.Cat_Id)</p>
                @Html.DropDownListFor(a => a.Cat_Id, new SelectList(Model.RMCategoryList, "Value", "Text", Model.Cat_Id), "-- Select --", new { @class = "selectpicker show-tick " })

                <p class="contact">@Html.LabelFor(a => a.Subcat_Id)</p>
                @Html.DropDownListFor(a => a.Subcat_Id, new SelectList(Model.RMSubCategoryList, "Value", "Text", Model.Subcat_Id), "-- Select --", new {  @class = "selectpicker show-tick " })

                <p class="contact">@Html.LabelFor(x => x.Code)</p>
                @Html.TextBoxFor(x => x.Code, new { @placeholder = "RM code like" })

                <p class="contact">@Html.LabelFor(x => x.Name)</p>
                @Html.TextBoxFor(x => x.Name, new { @placeholder = "RM Name like" })

                <p class="contact">@Html.LabelFor(x => x.Description)</p>
                @Html.TextBoxFor(x => x.Description, new { @placeholder = "Description like" })

            </div>
        </div>
    </div>

    <div class="col-xs-12 col-sm-6 col-lg-4">
        <div class="thumbnail thumbnail-mod-1 bordernone">
            <div class="form">
                <p class="contact">@Html.LabelFor(x => x.CreateDateFrom)</p>
                @Html.CheckBoxFor(x => x.ChkCreateDateFrom, new { @class = "chksearch" })
                @Html.TextBoxFor(a => a.CreateDateFrom, "{0:yyyy-MM-dd}", new { @class = "datesearch", @type = "date", @disabled = "true" })

                <p class="contact">@Html.LabelFor(x => x.CreateDateTo)</p>
                @Html.CheckBoxFor(x => x.ChkCreateDateTo, new { @class = "chksearch", @disabled = "true" })
                @Html.TextBoxFor(a => a.CreateDateTo, "{0:yyyy-MM-dd}", new { @class = "datesearch", @type = "date", @disabled = "true" })

                <p class="contact">@Html.LabelFor(a => a.Colour)</p>
                @Html.DropDownListFor(a => a.Colour, new SelectList(Model.ColorList, "Value", "Text", Model.Colour), "-- Select --", new { @class = "selectpicker show-tick " })

                <p class="contact">@Html.LabelFor(x => x.Finish)</p>
                @Html.TextBoxFor(x => x.Finish, new { @placeholder = "Finish like" })

                <p class="contact">@Html.LabelFor(x => x.SizeName)</p>
                @Html.TextBoxFor(x => x.SizeName, new { @placeholder = "Size like" })

            </div>
        </div>
    </div>

    <div class="col-xs-12 col-sm-6 col-lg-4">
        <div class="thumbnail thumbnail-mod-1 bordernone">
            <div class="form">
                <p class="contact">@Html.LabelFor(x => x.RMUpdateOn)</p>
                @Html.CheckBoxFor(x => x.ChkRMUpdateOn, new { @class = "chksearch" })
                @Html.TextBoxFor(a => a.RMUpdateOn, "{0:yyyy-MM-dd}", new { @class = "datesearch", @type = "date", @disabled = "true" })

                <p class="contact">@Html.LabelFor(x => x.RMReviewOn)</p>
                @Html.CheckBoxFor(x => x.ChkRMReviewOn, new { @class = "chksearch" })
                @Html.TextBoxFor(a => a.RMReviewOn, "{0:yyyy-MM-dd}", new { @class = "datesearch", @type = "date", @disabled = "true" })
             
                @*<input type="submit" value="Search" class="" id="search" />*@
                <p class="contact">&nbsp;</p>
                <input type="submit" value="Search" class="" id="search" style="width:28%;" />
                <input type="submit" value="Excel" class="" id="excel" style="width:29%;" />
            </div>
        </div>
    </div>
</div>
<div id="list" style="height:300px; overflow:auto; border:groove;"></div>
<br />
@{
    int usertypeid = Context.Session.GetInt32("usertypeid").Value;
}
@if (usertypeid <= 2)
{
    <div style="border:groove;">
        <label>Selected RM Move into : </label>
        @Html.DropDownListFor(a => a.Cat_Id, new SelectList(Model.RMCategoryList, "Value", "Text", Model.Cat_Id), "-- Select --", new { id = "cbochange_catid", })
        @Html.DropDownListFor(a => a.Subcat_Id, new SelectList(Model.RMSubCategoryList, "Value", "Text", Model.Subcat_Id), "-- Select --", new { id = "cbochange_subcatid" , })
        <a id="move" href="#">Move Selected RM</a>
    </div>
}
<script src="~/js/table2excel.js" type="text/javascript"></script>
<script type="text/javascript">
        $(function () {
            $("#excel").click(function () {
                //alert("excel");
                $(".table").table2excel({
                    filename: "ERPExcel"
                });
            });
        });
</script>



