@model ERP.Web.Areas.Contractor.Models.ContractorModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Contractor";
}
<link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap-select.css" />
<script src="~/lib/bootstrap/dist/js/bootstrap-select.js"></script>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="" />
<meta name="keywords" content="" />

<div id="message-area"></div>

<script type="text/javascript">
    function ShowSuccess(data) {
        //$(".container").find("input:text").val('');
        //$(".container").find("textarea").val('');
        alert(data);
        window.location.href = "../../Contractor/Contractor/CreateContractor";
    }

    function HideForm() {
        //When the form is submitted, we hide the form
        $("#form-area").hide();
    }

    function ShowFailure(data) {
        alert("Already Exist");
        //In the case that the AJAX call fails to communicate with the server
        //(e.g. the user's internet connection cuts out), we should display a message to that effect
        //$('#message-area').html("<div class='alert alert-danger'><strong>Error!</strong>The server could not be contacted and your message has not been sent. Please check your internet connection and try again later.</div>");
    }
</script>

@section Scripts {
    <script type="text/javascript">
        prevententertosubmit();

    </script>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            liveSearch: true,
            showSubtext: true
        });
    });
</script>
<form asp-controller="Contractor" asp-action="CreateContractor" data-ajax="true" data-ajax-success="ShowSuccess" data-ajax-failure="ShowFailure" data-ajax-method="POST">
    @Html.ValidationSummary(true)

    <div class="clear"></div>
    <div class="container containerheight">
        <p>
            @Html.ActionLink("Contractor List", "ContractorList", "Contractor", "", new { @class = "btn btn-info" })
        </p>
        <div class="row clearleft-custom flow-offset-1">
            <div class="col-xs-12 col-sm-6 col-lg-4">
                <div class="thumbnail thumbnail-mod-1">
                    <div class="form">
                        <div>
                            <h2>Contractor</h2>
                            @Html.HiddenFor(a => a.ContractorID)
                        </div>

                        <p class="contact">
                            @Html.LabelFor(a => a.ContractorName)
                        </p>
                        @Html.TextBoxFor(a => a.ContractorName, new { @required = "true", autocomplete = "off", maxlength = "50" })

                        <p class="contact">
                            @Html.LabelFor(a => a.CompanyID)
                        </p>
                        @Html.DropDownListFor(a => a.CompanyID, new SelectList(Model.CompanyList, "Value", "Text", Model.CompanyID), "-- Select --", new { @required = "true", @class = "selectpicker show-tick " })

                        <p class="contact">
                            @Html.LabelFor(a => a.Address)
                        </p>
                        @Html.TextAreaFor(a => a.Address, new { @required = "true", autocomplete = "off", row = "3" })

                        <p class="contact">
                            @Html.LabelFor(a => a.Phone1)
                        </p>
                        @Html.TextBoxFor(a => a.Phone1, new { @required = "true", autocomplete = "off" })

                        <p class="contact">
                            @Html.LabelFor(a => a.Mobile1)
                        </p>
                        @Html.TextBoxFor(a => a.Mobile1, new { @required = "true", autocomplete = "off" })

                        <p class="contact">
                            @Html.LabelFor(a => a.OpeningBalance)
                        </p>
                        @Html.TextBoxFor(a => a.OpeningBalance, new { @required = "true", autocomplete = "off" })

                        <p class="contact">
                            @Html.LabelFor(a => a.OpeningDate)
                        </p>
                        @Html.TextBoxFor(a => a.OpeningDate, "{0:yyyy-MM-dd}", new { @type = "date" })
                        <p class="contact">
                            @Html.LabelFor(a => a.Active_Deactive)
                        </p>
                        @Html.DropDownListFor(a => a.Active_Deactive, new SelectList(Model.ActiveDeactiveList, "Value", "Text", Model.Active_Deactive), "-- Select --", new { @required = "true" })


                        @*<p class="contact">
                                @Html.LabelFor(a => a.IsPayable)
                            </p>*@

                        @*@Html.RadioButtonFor(a => a.IsPayable, "1")@Html.Label("Yes")
                            @Html.RadioButtonFor(a => a.IsPayable, "0")@Html.Label("No")*@
             
                    <div style="float:left; width:40%;">
                        @Html.LabelFor(a => a.IsPayable)
                        <label></label>
                    </div>
                    <div style="float:right; width:60%;">
                        @Html.RadioButtonFor(a => a.IsPayable, "1")Yes
                        @Html.RadioButtonFor(a => a.IsPayable, "0")No
                    </div>
               

                    <p class="contact">
                        <label>&nbsp;</label>
                    </p>
                    <input id="Submit1" type="submit" value="Save Contractor" />
                </div>
            </div>
        </div>
    </div>
</form>
