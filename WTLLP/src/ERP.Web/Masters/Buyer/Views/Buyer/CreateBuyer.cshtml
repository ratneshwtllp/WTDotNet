@model ERP.Web.Areas.Buyer.Models.BuyerModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "New Buyer";
}
<link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap-select.css" />
<script src="~/lib/bootstrap/dist/js/bootstrap-select.js"></script>

<div id="message-area"></div>
<script type="text/javascript">
    function ShowSuccess(data) {
        $(".container").find("input:text").val('');
        $(".container").find("textarea").val('');
        alert(data);
    }

    function readfile(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image_preview').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function HideForm() {
        //When the form is submitted, we hide the form
        $("#form-area").hide();
    }

    function ShowFailure(data) {
        //alert(data);
        alert("Already Exist")
        //In the case that the AJAX call fails to communicate with the server
        //(e.g. the user's internet connection cuts out), we should display a message to that effect
        //$('#message-area').html("<div class='alert alert-danger'><strong>Error!</strong>The server could not be contacted and your message has not been sent. Please check your internet connection and try again later.</div>");
    }
</script>

@section Scripts {
    <script type="text/javascript">
        prevententertosubmit();
        $(function () {
            $("#cbo_Country").change(function () {
                var value = $("#cbo_Country :selected").val();
                //$("#CountryId").val(value);
                //alert(value);

                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetStateList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#cbo_State").html(items.join(' '));
                        $("#cbo_State").selectpicker('refresh');
                    },
                });
            });
        });

        $(function () {
            $("#cbo_State").change(function () {
                var value = $("#cbo_State :selected").val();
                //$("#StateId").val(value);
                //alert(value);

                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetCityList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_City").html(items.join(' '));
                        $("#cbo_City").selectpicker('refresh');
                    },
                });
            });
        });

        //$(function () {
        //    $("#cbo_City").change(function () {
        //        var value = $("#cbo_City :selected").val();
        //        $("#CityId").val(value);
        //        //alert(value);
        //    });
        //});

        $(function () {
            $(document).on('click', '#add', function () {
                //alert("in");
                var beneficiary = $('#Beneficiary').val();
                var bankid = $('#cbo_bank :selected').val();
                var bank = $('#cbo_bank :selected').text();
                var bankadd = $('#BankAddress').val();
                var swiftcode = $('#BankSwiftCode').val();
                var ifsccode = $('#BankIFSCCode').val();
                var accountno = $('#AccountNo').val();
                var verifyaccount = $('#VerifyAccountNo').val();

                //alert(beneficiary);
                //alert(bank);
                //alert(bankadd);
                //alert(swiftcode);
                //alert(ifsccode);
                //alert(accountno);
                //alert(verifyaccount);

                if (beneficiary == '') {
                    alert("Please enter  beneficial");
                    return;
                }
                if (bankid == 0) {
                    alert("Please select bank");
                    return;
                }
                if (bankadd == '') {
                    alert("Please enter  bank address");
                    return;
                }
                if (swiftcode == '') {
                    alert("Please enter  bank swift code");
                    return;
                }
                if (ifsccode == '') {
                    alert("Please enter  bank isfc code");
                    return;
                }
                if (accountno == '') {
                    alert("Please enter  account no");
                    return;
                }

                if (accountno !=  verifyaccount) {
                    alert("Please verify account no");
                    return;
                }
                var tablebankid = 0;

                var ritem_status = 0;

                $('#orderdetailsItems tr').each(function () {
                    tablebankid = parseInt($('.bankid', this).text());
                    if (bankid == tablebankid ) {
                        ritem_status = 1;
                    }
                });
                if (ritem_status == 1) {
                    alert("Bank Already Exits");
                    return;
                }
                $('#orderdetailsItems').append('<tr class="mycontainer"><td class="beneficiary selectwidth">' + beneficiary + '</td><td class="bank selectwidth ">' + bank + '</td><td class="bankadd selectwidth">' + bankadd + '</td><td class="swiftcode selectwidth">' + swiftcode + '</td><td class="ifsccode selectwidth">' + ifsccode + '</td><td class="accountno selectwidth">' + accountno + '</td><td class="bankid selectwidth hidden">' + bankid + '</td></td><td><button type="button" class="btn remove btn-danger"><span class="glyphicon glyphicon-trash"></span> </button></td></tr>')
                $('#Beneficiary,#BankAddress,#BankSwiftCode,#BankIFSCCode,#AccountNo,#VerifyAccountNo').val('');
                $('#cbo_bank').val('0');
            });
        });
        $(function () {
            //remove button click event
            $('#orderdetailsItems').on('click', '.remove', function () {
                //$(this).parents('tr').remove();
                //CalTotal();
                var old = $(this);
                $("#dialog-confirm").dialog({
                    resizable: false,
                    height: "auto",
                    width: 400,
                    modal: true,
                    buttons: {
                        "Yes": function () {
                            $(this).dialog("close");
                            old.parents('tr').remove();
                            //CalTotal();
                        },
                        Cancel: function () {
                            $(this).dialog("close");
                        }
                    }
                });
            });
        });

        $(function () {
            $("#refreshcountry").click(function () {
                //alert(value);
                $.ajax({
                    cache: false,
                    url: '@Url.Action("RefreshCountry")',
                    type: "GET",
                    data: {},
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#cbo_Country").html(items.join(' '));
                        $("#cbo_Country").selectpicker('refresh');
                    },
                });
            });
        });


        $(function () {
            $("#refreshstate").click(function () {
               var value = $("#cbo_Country :selected").val();
                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetStateList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#cbo_State").html(items.join(' '));
                        $("#cbo_State").selectpicker('refresh');
                    },
                });
            });
        });

        $(function () {
            $("#refreshcity").click(function () {
                var value = $("#cbo_State :selected").val();

                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetCityList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_City").html(items.join(' '));
                        $("#cbo_City").selectpicker('refresh');
                    },
                });
            });
        });
         $(function () {
             $("#refreshcurrency").click(function () {
                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetCurrencyList")',
                    type: "GET",
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_currency").html(items.join(' '));
                        $("#cbo_currency").selectpicker('refresh');
                    },
                });
            });
        });


    </script>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            liveSearch: true,
            showSubtext: true
        });
    });
</script>

@*<form asp-controller="Buyer" asp-action="CreateBuyer" data-ajax="true" data-ajax-success="ShowSuccess" data-ajax-failure="ShowFailure" data-ajax-method="POST">*@
<form asp-controller="Buyer" asp-action="CreateBuyer" enctype="multipart/form-data" method="POST">
    @*@Html.ValidationSummary(true)*@
    @Html.ValidationSummary(true)
    <div class="clear"></div>
    <div class="container">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#tab1">Buyer Details</a></li>
            @*<li><a data-toggle="tab" href="#tab2">Buyer Bank  Details </a></li>*@
            <li><a data-toggle="tab" href="#tab3">Consignee   </a></li>
        </ul>
        <div class="tab-content">
            <div id="tab1" class="tab-pane active">
                <div id="buyerdetail">
                    <div class="row clearleft-custom flow-offset-1">
                        <div class="col-xs-12 col-sm-6 col-lg-4">
                            <div class="thumbnail thumbnail-mod-1">
                                <div class="form">
                                    @*<strong>@Html.ActionLink("Buyer List", "BuyerList", "Buyer")</strong>*@
                                    @Html.HiddenFor(a => a.BuyerId)
                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerCode)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerCode, new { @required = "true", autocomplete = "off", maxlength = "50" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerName)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerName, new { @required = "true", autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.ContactPerson)
                                    </p>
                                    @Html.TextBoxFor(a => a.ContactPerson, new { @required = "true", autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerAddress)
                                    </p>
                                    @Html.TextAreaFor(a => a.BuyerAddress, new { rows = "7", @required = "true", autocomplete = "off" })

                                    <p class="contact">
                                        <strong><a href="@Url.Action("CreateCountry", "Country" , new { @area = "Country" }) " target='_blank' style="display:inline;"> Country </a></strong>&nbsp;
                                        <a href="#" id="refreshcountry" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                                    </p>
                                    @Html.DropDownListFor(a => a.CountryId, new SelectList(Model.CountryList, "Value", "Text", Model.CountryId), "-- Select --", new { id = "cbo_Country", @required = "true", @class = "selectpicker show-tick " })

                                    <p class="contact">
                                        <strong><a href="@Url.Action("CreateState", "State" , new { @area = "State" }) " target='_blank' style="display:inline;"> State </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <a href="#" id="refreshstate" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                                    </p>
                                    @Html.DropDownListFor(a => a.StateId, new SelectList(Model.StateList, "Value", "Text", Model.StateId), "-- Select --", new { id = "cbo_State", @required = "true", @class = "selectpicker show-tick " })

                                    <p class="contact">
                                        <strong><a href="@Url.Action("CreateCity", "City" , new { @area = "City" }) " target='_blank' style="display:inline;"> City </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <a href="#" id="refreshcity" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                                    </p>
                                    @Html.DropDownListFor(a => a.CityId, new SelectList(Model.CityList, "Value", "Text", Model.CityId), "-- Select --", new { id = "cbo_City", @required = "true", @class = "selectpicker show-tick " })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.Pincode)
                                    </p>
                                    @Html.TextBoxFor(a => a.Pincode, new { @required = "true", autocomplete = "off", id = "txt_pincode" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerPhoneNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerPhoneNo, new { @required = "true", autocomplete = "off", maxlength = "20" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerMobileNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerMobileNo, new { @required = "true", autocomplete = "off", maxlength = "20" })
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-6 col-lg-4">
                            <div class="thumbnail thumbnail-mod-1">
                                <div class="form">
                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerFaxNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerFaxNo, new { autocomplete = "off", maxlength = "20" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerEmail)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerEmail, new { autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerWeb)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerWeb, new { autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerPANNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerPANNo, new { autocomplete = "off", maxlength = "20" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerCSTNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerCSTNo, new { autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerUPTTNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerUPTTNo, new { autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerTINNo)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerTINNo, new { autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerLocalTAX)
                                    </p>
                                    @Html.TextBoxFor(a => a.BuyerLocalTAX, new { autocomplete = "off" })
                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerTerms)
                                    </p>
                                    @Html.TextAreaFor(a => a.BuyerTerms, new { rows = "4", autocomplete = "off" })

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerDesc)
                                    </p>
                                    @Html.TextAreaFor(a => a.BuyerDesc, new { rows = "4", autocomplete = "off" })
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-12 col-sm-6 col-lg-4">
                            <div class="thumbnail thumbnail-mod-1">
                                <div class="form">
                                    <p class="contact">
                                        <strong><a href="@Url.Action("CreateCurrency", "Currency" , new { @area = "Currency" }) " target='_blank' style="display:inline;"> Currency </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <a href="#" id="refreshcurrency" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                                    </p>
                                    @Html.DropDownListFor(a => a.CID, new SelectList(Model.CurrencyList, "Value", "Text", Model.CID), "-- Select --", new {id= "cbo_currency", @required = "true", @class = "selectpicker show-tick " })
                                    @*<p class="contact">
                                            @Html.LabelFor(a => a.BuyerUserID)
                                        </p>
                                        @Html.TextBoxFor(a => a.BuyerUserID, new { autocomplete = "off" })*@

                                    <p class="contact">
                                        @Html.LabelFor(a => a.BuyerPW)
                                    </p>
                                    @Html.PasswordFor(a => a.BuyerPW, new { autocomplete = "off", @required = "true" })
                                    <p class="contact">@Html.LabelFor(a => a.FOB_CIF)</p>
                                    @Html.DropDownListFor(a => a.FOB_CIF, new SelectList(Model.FOBList, "Value", "Text", Model.FOB_CIF), "-- Select --",new { @class = "selectpicker show-tick " })
                                    <p class="contact">@Html.LabelFor(a => a.IsActive)</p>
                                    @Html.DropDownListFor(a => a.IsActive, new SelectList(Model.IsActiveList, "Value", "Text", Model.IsActive), "-- Select --",new { @class = "selectpicker show-tick " })
                                    <p class="contact">@Html.LabelFor(a => a.IsAllowLogin)</p>
                                    @Html.DropDownListFor(a => a.IsAllowLogin, new SelectList(Model.IsAllowLoginList, "Value", "Text", Model.IsAllowLogin), "-- Select --",new { @class = "selectpicker show-tick " })
                                    <p class="contact">
                                        @Html.LabelFor(a => a.IsGeneralBuyer)
                                    </p>
                                    @Html.DropDownListFor(a => a.IsGeneralBuyer, new SelectList(Model.IsGeneralBuyerList, "Value", "Text", Model.IsGeneralBuyer), "-- Select --",new { @class = "selectpicker show-tick " })

                                    <p class="contact"><label>Logo (145 X 50 px)</label></p>
                                    <div style="height:165px;">
                                        <input type="file" onchange="readfile(this);" id="fileupload" name="file" multiple />
                                        <p class="contact">&nbsp;</p>
                                        <img id="image_preview" src="../../../@Model.LogoPath" alt="your image" width="200" height="100" />

                                         <br />
                                    </div>
                                    <p class="contact"><label>&nbsp;</label></p>
                                    <input id="Submit1" type="submit" value="Save" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<div id="tab2" class="tab-pane">
                <div id="buyerbanklist">
                    <div class="col-xs-12 col-sm-6 col-lg-4">
                        <div class="thumbnail thumbnail-mod-1">
                            <div class="form">
                                <p class="contact">@Html.LabelFor(a => a.Beneficiary)</p>
                                @Html.TextBoxFor(a => a.Beneficiary, new { @required = "true"})
                                <p class="contact">@Html.LabelFor(a => a.BankId)</p>
                                @Html.DropDownListFor(a => a.BankId, new SelectList(Model.BankList, "Value", "Text", Model.BankId), "-- Select --", new { id = "cbo_bank", @required = "true" })

                                <p class="contact">@Html.LabelFor(a => a.BankAddress)</p>
                                @Html.TextBoxFor(a => a.BankAddress, new { @required = "true"})
                                <p class="contact">@Html.LabelFor(a => a.BankSwiftCode)</p>
                                @Html.TextBoxFor(a => a.BankSwiftCode, new { @required = "true"})

                                <p class="contact">@Html.LabelFor(a => a.BankIFSCCode)</p>
                                @Html.TextBoxFor(a => a.BankIFSCCode, new { @required = "true"})

                                <p class="contact">@Html.LabelFor(a => a.AccountNo)</p>
                                @Html.TextBoxFor(a => a.AccountNo, new { @required = "true"})
                                <p class="contact">@Html.LabelFor(a => a.VerifyAccountNo)</p>
                                @Html.TextBoxFor(a => a.VerifyAccountNo, new { @required = "true"})
                                <p class="contact"><label>&nbsp;</label></p>
                                @Html.HiddenFor(a => a.BankId, new { id = "bankid" })
                                <input id="add" type="button" value="Add" class="button" style="width:100px!important;" />

                            </div>
                        </div>
                    </div>

                    <div class="details">
                        <table class="table table-responsive">
                            <tr>
                                <td class="selectwidth tableheading">@Html.LabelFor(a => a.Beneficiary)</td>
                                <td class="selectwidth tableheading">@Html.LabelFor(a => a.BankId)</td>
                                <td class="selectwidth tableheading">@Html.LabelFor(a => a.BankAddress)</td>
                                <td class="selectwidth tableheading">@Html.LabelFor(a => a.BankSwiftCode)</td>
                                <td class="selectwidth tableheading">@Html.LabelFor(a => a.BankIFSCCode)</td>
                                <td class="selectwidth tableheading">@Html.LabelFor(a => a.AccountNo)</td>
                                <td class="selectwidth">&nbsp;</td>
                            </tr>

                        </table>
                    </div>

                    <div id="orderItems">
                        <table class="table table-responsive" id="orderdetailsItems" style="border:groove">
                            <tbody></tbody> 
                        </table>
                    </div>
                    <div id="dialog-confirm" title="Remove Confirmation" style="display:none;">
                        <p><span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>This Row will be Remove. Are you sure?</p>
                    </div>
                </div>

            </div>*@

            <div id="tab3" class="tab-pane">
                <div id="buyerconsigneelist">
                    <div class="col-xs-12 col-sm-6 col-lg-4">
                        <div class="thumbnail thumbnail-mod-1">
                            <div class="form">
                                <div style="height:450px; overflow:auto">
                                    @for (int i = 0; i < Model.BuyerConsigneeModel.Count; i++)
                                    {
                                        @Html.CheckBoxFor(m => m.BuyerConsigneeModel[i].Selected, new { @class = "suppliercheckbox" })
                                        @Html.HiddenFor(m => m.BuyerConsigneeModel[i].ConsigneeId)
                                        @Html.LabelFor(m => m.BuyerConsigneeModel[i].ConsigneeName, Model.BuyerConsigneeModel[i].ConsigneeName)
                                        <br />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

