@model ERP.Web.Areas.Buyer.Models.BuyerModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Edit Buyer";
}
<link rel="stylesheet" type="text/css" href="~/lib/bootstrap/dist/css/bootstrap-select.css" />
<script src="~/lib/bootstrap/dist/js/bootstrap-select.js"></script>

<div id="message-area"></div>

<script type="text/javascript">
    function ShowSuccess(data) {
        window.location.href = "../../Buyer/BuyerList";
        alert(data);
    }
    function readfile(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image_preview').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function HideForm() {
        //When the form is submitted, we hide the form
        $("#form-area").hide();
    }

    function ShowFailure(data) {
        alert(data);
        //In the case that the AJAX call fails to communicate with the server
        //(e.g. the user's internet connection cuts out), we should display a message to that effect
        $('#message-area').html("<div class='alert alert-danger'><strong>Error!</strong>The server could not be contacted and your message has not been sent. Please check your internet connection and try again later.</div>");
    }

</script>

@section Scripts {
    <script type="text/javascript">
        prevententertosubmit();

        $(function () {
            $("#cbo_Country").change(function () {
                var value = $("#cbo_Country :selected").val();
                //$("#CountryId").val(value);
                //alert(value);

                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetStateList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_State").html(items.join(' '));
                        $("#cbo_State").selectpicker('refresh');
                    },
                });
            });
        });

        $(function () {
            $("#cbo_State").change(function () {
                var value = $("#cbo_State :selected").val();
                //$("#StateId").val(value);
                //alert(value);

                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetCityList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_City").html(items.join(' '));
                        $("#cbo_City").selectpicker('refresh');
                    },
                });
            });
        });

         $(function () {
            $("#refreshcountry").click(function () {
                //alert(value);
                $.ajax({
                    cache: false,
                    url: '@Url.Action("RefreshCountry")',
                    type: "GET",
                    data: {},
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#cbo_Country").html(items.join(' '));
                        $("#cbo_Country").selectpicker('refresh');
                    },
                });
            });
        });


        $(function () {
            $("#refreshstate").click(function () {
               var value = $("#cbo_Country :selected").val();
                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetStateList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }
                        $("#cbo_State").html(items.join(' '));
                        $("#cbo_State").selectpicker('refresh');
                    },
                });
            });
        });

        $(function () {
            $("#refreshcity").click(function () {
                var value = $("#cbo_State :selected").val();

                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetCityList")',
                    type: "GET",
                    data: { id: value },
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_City").html(items.join(' '));
                        $("#cbo_City").selectpicker('refresh');
                    },
                });
            });
        });
         $(function () {
             $("#refreshcurrency").click(function () {
                $.ajax({
                    cache: false,
                    url: '@Url.Action("GetCurrencyList")',
                    type: "GET",
                    dataType: 'JSON',
                    success: function (data) {
                        var data = JSON.parse(data);
                        var items = [];
                        items.push("<option value=''>" + "-- Select --" + "</option>");
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].id + ">" + data[i].value + "</option>");
                        }

                        $("#cbo_currency").html(items.join(' '));
                        $("#cbo_currency").selectpicker('refresh');
                    },
                });
            });
        });

    </script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            liveSearch: true,
            showSubtext: true
        });
    });
</script>

<form asp-controller="Buyer" asp-action="EditBuyer" enctype="multipart/form-data" method="POST">
    @*<form asp-controller="Buyer" asp-action="EditBuyer" data-ajax="true" data-ajax-success="ShowSuccess" data-ajax-failure="ShowFailure" data-ajax-method="POST">*@
    @Html.ValidationSummary(true)
    <div class="clear"></div>
    <div class="container">
        <div class="row clearleft-custom flow-offset-1">
            <div class="col-xs-12 col-sm-6 col-lg-4">
                <div class="thumbnail thumbnail-mod-1">
                    <div class="form">
                        @Html.HiddenFor(a => a.BuyerId)
                        @Html.HiddenFor(a => a.LogoPath)

                        <p class="contact">@Html.LabelFor(a => a.BuyerCode)</p>
                        @Html.TextBoxFor(a => a.BuyerCode, new { @required = "true", autocomplete = "off", maxlength = "50" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerName)</p>
                        @Html.TextBoxFor(a => a.BuyerName, new { @required = "true", autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.ContactPerson)</p>
                        @Html.TextBoxFor(a => a.ContactPerson, new { @required = "true", autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerAddress)</p>
                        @Html.TextAreaFor(a => a.BuyerAddress, new { rows = "7", @required = "true", autocomplete = "off" })

                        <p class="contact">
                            <strong><a href="@Url.Action("CreateCountry", "Country" , new { @area = "Country" }) " target='_blank' style="display:inline;"> Country </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <a href="#" id="refreshcountry" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                        </p>
                        @Html.DropDownListFor(a => a.CountryId, new SelectList(Model.CountryList, "Value", "Text", Model.CountryId), "-- Select --", new { id = "cbo_Country", @required = "true", @class = "selectpicker show-tick " })

                        <p class="contact">
                            <strong><a href="@Url.Action("CreateState", "State" , new { @area = "State" }) " target='_blank' style="display:inline;"> State </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <a href="#" id="refreshstate" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                        </p>
                        @Html.DropDownListFor(a => a.StateId, new SelectList(Model.StateList, "Value", "Text", Model.StateId), "-- Select --", new { id = "cbo_State", @required = "true", @class = "selectpicker show-tick " })

                            <p class="contact">
                                <strong><a href="@Url.Action("CreateCity", "City" , new { @area = "City" }) " target='_blank' style="display:inline;"> City </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <a href="#" id="refreshcity" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                            </p>
                        @Html.DropDownListFor(a => a.CityId, new SelectList(Model.CityList, "Value", "Text", Model.CityId), "-- Select --", new { id = "cbo_City", @required = "true", @class = "selectpicker show-tick " })

                        <p class="contact">@Html.LabelFor(a => a.Pincode)</p>
                        @Html.TextBoxFor(a => a.Pincode, new { @required = "true", autocomplete = "off", id = "txt_pincode" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerPhoneNo)</p>
                        @Html.TextBoxFor(a => a.BuyerPhoneNo, new { @required = "true", autocomplete = "off", maxlength = "20" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerMobileNo)</p>
                        @Html.TextBoxFor(a => a.BuyerMobileNo, new { @required = "true", autocomplete = "off", maxlength = "20" })

                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-sm-6 col-lg-4">
                <div class="thumbnail thumbnail-mod-1">
                    <div class="form">
                        <p class="contact">@Html.LabelFor(a => a.BuyerFaxNo)</p>
                        @Html.TextBoxFor(a => a.BuyerFaxNo, new { autocomplete = "off", maxlength = "20" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerEmail)</p>
                        @Html.TextBoxFor(a => a.BuyerEmail, new { autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerWeb)</p>
                        @Html.TextBoxFor(a => a.BuyerWeb, new { autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerPANNo)</p>
                        @Html.TextBoxFor(a => a.BuyerPANNo, new { autocomplete = "off", maxlength = "20" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerCSTNo)</p>
                        @Html.TextBoxFor(a => a.BuyerCSTNo, new { autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerUPTTNo)</p>
                        @Html.TextBoxFor(a => a.BuyerUPTTNo, new { autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerTINNo)</p>
                        @Html.TextBoxFor(a => a.BuyerTINNo, new { autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerLocalTAX)</p>
                        @Html.TextBoxFor(a => a.BuyerLocalTAX, new { autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerTerms)</p>
                        @Html.TextAreaFor(a => a.BuyerTerms, new { rows = "4", autocomplete = "off" })

                        <p class="contact">@Html.LabelFor(a => a.BuyerDesc)</p>
                        @Html.TextAreaFor(a => a.BuyerDesc, new { rows = "4", autocomplete = "off" })
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-lg-4">
                <div class="thumbnail thumbnail-mod-1">
                    <div class="form">
                        <p class="contact">
                            <strong><a href="@Url.Action("CreateCurrency", "Currency" , new { @area = "Currency" }) " target='_blank' style="display:inline;"> Currency </a></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <a href="#" id="refreshcurrency" style="display:inline;"><span class="glyphicon glyphicon-refresh "></span></a>
                        </p>
                        @Html.DropDownListFor(a => a.CID, new SelectList(Model.CurrencyList, "Value", "Text", Model.CID), "-- Select --", new {id="cbo_currency", @required = "true", @class = "selectpicker show-tick " })

                        <p class="contact">@Html.LabelFor(a => a.BuyerPW)</p>
                        @Html.PasswordFor(a => a.BuyerPW, new { autocomplete = "off", @required = "true" })

                        <p class="contact">@Html.LabelFor(a => a.FOB_CIF)</p>
                        @Html.DropDownListFor(a => a.FOB_CIF, new SelectList(Model.FOBList, "Value", "Text", Model.FOB_CIF), "-- Select --", new { @class = "selectpicker show-tick " })

                        <p class="contact">@Html.LabelFor(a => a.IsActive)</p>
                        @Html.DropDownListFor(a => a.IsActive, new SelectList(Model.IsActiveList, "Value", "Text", Model.IsActive), "-- Select --", new { @class = "selectpicker show-tick " })

                        <p class="contact">@Html.LabelFor(a => a.IsAllowLogin)</p>
                        @Html.DropDownListFor(a => a.IsAllowLogin, new SelectList(Model.IsAllowLoginList, "Value", "Text", Model.IsAllowLogin), "-- Select --", new { @class = "selectpicker show-tick " })

                        <p class="contact">@Html.LabelFor(a => a.IsGeneralBuyer)</p>
                        @Html.DropDownListFor(a => a.IsGeneralBuyer, new SelectList(Model.IsGeneralBuyerList, "Value", "Text", Model.IsGeneralBuyer), "-- Select --", new { @class = "selectpicker show-tick " })

                        <p class="contact"><label>Logo (145 X 50 px)</label></p>
                        <div style="height:165px;">
                            <input type="file" onchange="readfile(this);" id="fileupload" name="file" multiple />
                            <p class="contact">&nbsp;</p>
                            <img id="image_preview" src="../../../@Model.LogoPath" alt="your image" width="50" height="50" />
                            <br />
                        </div>

                        <p class="contact"><label>&nbsp;</label></p>
                        <input id="Submit1" type="submit" value="Update Buyer" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</form>
